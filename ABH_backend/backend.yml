apiVersion: v1
kind: Service
metadata:
  name: nestjs-app
spec:
  selector:
    app: nestjs-app
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nestjs-app
spec:
  selector:
    matchLabels:
      app: nestjs-app
  replicas: 1
  template:
    metadata:
      labels:
        app: nestjs-app
    spec:
      containers:
        - name: nestjs-app
          image: backend-nestjs-app
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: production
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: 1DqkDgLx87RquycTLo4X
            - name: POSTGRES_DB
              value: postgres
            - name: POSTGRES_URI
              value: roovasstagingdb.cuzjlcl29nhs.us-west-2.rds.amazonaws.com
            - name: API_PORT
              value: 5000
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          command: ['redis-server', '--bind', 'redis', '--port', '6379']
          ports:
            - containerPort: 6379
          restartPolicy: Always
